from Simulator import WindGym
from agent.AgentWrapper import AgentWrapper
from support.GraphComputation import GraphComputation
from support.RewardComputation import RewardComputation

# todo read exp runner setting from config file
episode = 100
simTime = 100
turbineNum = 11

simm = WindGym()

agentWrapper = AgentWrapper()
agentWrapper.makeAgents(agentNum=turbineNum, type="random")

# how to make these names?
graphComputer = GraphComputation()
rewardComputer = RewardComputation()


for eps in range(0, episode):
    simm.__init__()
    for timeI in range(0, simTime):
        # where is the filter for state, in simulator or in AgentWrapper?
        state = simm.makeState()

        # envInfo includes wind and turbine position
        envInfo = simm.makeEnvInfo()

        # a turbine list in a generated by wind-topo order
        instantTopoGraph = graphComputer.getTopoGraph(envInfo)

        for turbineId in instantTopoGraph:
            action = agentWrapper.forward(turbineId, state)
            # where to build reward and s'?
            reward = simm.miniStep(turbineId, action)
            state_ = simm.makeState()
            rewardComputer.store(turbineId, state, action, reward, state_)


